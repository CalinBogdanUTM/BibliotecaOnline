@model MyLibrary.Domain.Entities.Book.BookInfo

@{
    ViewBag.Title = "Book Details";
}

<!DOCTYPE html>
<html lang="zxx">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewBag.Title</title>
    @Styles.Render("~/bundles/vendorcss")
    <link href="~/Vendor/css/dflip.min.css" rel="stylesheet" />
    <link href="~/Vendor/css/themify-icons.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" />
    <style>
        /* General styles */
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
        }

        /* Header styles */
        header {
            background-color: #333;
            color: #fff;
            padding: 20px;
            text-align: center;
        }

        /* Book details styles */
        .book-details {
            display: flex;
            justify-content: center;
            align-items: center;
            margin: 40px 0;
        }

        .book-image-container {
            width: 30%;
            margin-right: 40px;
        }

        .book-detail-image {
            width: 100%;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
        }

        .book-info {
            width: 60%;
            font-size: 24px; /* Adjust the value as needed */
        }

            .book-info h2 {
                font-size: 3rem; /* Increased from 2.5rem */
                margin-bottom: 20px;
            }

            .book-info p {
                font-size: 1.4rem; /* Increased from 1.2rem */
                margin-bottom: 10px;
            }

        .actions {
            padding: 20px;
        }

        .read-button,
        .favorite-button {
            background-color: #4CAF50;
            color: white;
            padding: 12px 24px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 1.2rem; /* Increased from 1rem */
            text-decoration: none;
            transition: background-color 0.3s ease;
        }

            .read-button:hover,
            .favorite-button:hover {
                background-color: #45a049;
            }

        /* Footer styles */
        footer {
            background-color: #333;
            color: #fff;
            padding: 20px;
            text-align: center;
        }

        .BookInfo {
            font-size: 20px;
        }

        /* PDF Viewer styles */
        #dflip-viewer {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.8);
            z-index: 9999;
            display: none;
            /* Added styles for initial state */
            transition: opacity 0.5s ease-in-out;
            opacity: 0;
        }

        .container {
            width: 100%;
            height: 100%;
            display: flex;
            justify-content: center;
            align-items: center;
            position: relative; /* Added to position the exit button correctly */
        }

        .exit-button {
            position: absolute;
            top: 20px;
            right: 20px;
            background-color: #f44336; /* Red background */
            color: white;
            padding: 10px 15px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            z-index: 1000; /* Ensure the button is on top of DFlip */
        }

        /* Style for DFlip initial state */
       
    </style>
</head>
<body>
    <header>
        <h1>My Library</h1>
    </header>

    <div class="content-wrapper">
        <div class="container1">
            <div class="book-details">
                <div class="book-image-container">
                    <img src="~/images/coperta/@Model.ImageUrl" alt="@Model.Title" class="book-detail-image">
                </div>
                <div class="book-info">
                    <p class="BookInfo"><strong class="BookInfo">Title:</strong> @Model.Title</p>
                    <p class="BookInfo"><strong class="BookInfo">Author:</strong> @Model.Author</p>
                    <p class="BookInfo"><strong class="BookInfo">Category:</strong> @Model.Category</p>
                    <p class="BookInfo">@Model.Description</p>

                    <div class="actions">
                        <button class="read-button" id="readButton" onclick="openBook('@Model.SourceUrl')"><i class="fas fa-book-open"></i> Read</button>
                        <button class="favorite-button" onclick="addToFavorites(@Model.BookId)">
                            <i class="fas fa-heart"></i> Add to Favorites
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div><footer>
        @Html.Partial("_Footer")
    </footer>

    <!-- DFlip Viewer -->
    <div id="dflip-viewer">
        <div class="container">
            <div class="col-xs-12">
                <!-- DFlip Book -->
                <div class="_df_book df_init" height="500" webgl="true" backgroundcolor="teal"
                     source="~/Vendor/book/@Model.SourceUrl"
                     id="my-dflip-book" spread="true"> 
                </div>
                <button class="exit-button" onclick="closeBook()">Exit Reading</button>
            </div>
        </div>
    </div>



    @Scripts.Render("~/bundles/vendorjs")
    @RenderBody()

    <script src="~/Vendor/js/libs/jquery.min.js"></script>
    <script src="~/Vendor/js/dflip.min.js"></script>

    <script>
        // Function to open DFlip viewer when the "Read" button is clicked
        function openBook(sourceUrl) {
            // Get the book ID from your Model
            var bookId = @Model.BookId;

            // Send AJAX request to record interaction
            $.ajax({
                url: '@Url.Action("ReadNow", "Books")',
                type: 'POST',
                data: { bookId: bookId },
                success: function (result) {
                    if (result.success) {
                        // Interaction recorded successfully, open the book
                        $(".content-wrapper").hide();
                        $("#dflip-viewer").show();
                        $("#dflip-viewer").css("opacity", "1");
                        $("#df_manual_book").css("opacity", "1");

                        // Trigger zoom-in after DFlip is fully loaded
                        setTimeout(function() {
                            // Assuming DFlip uses the zoom method (check its documentation)
                            $("#df_manual_book").dflip("zoom", 1);

                            // Zoom out after a delay
                            setTimeout(function() {
                                $("#df_manual_book").dflip("zoom", 0.5);
                            }, 2000); // Zoom out after 2 seconds

                        }, 500); // Wait for DFlip to load 

                    } else {
                        // Handle error (e.g., display an error message)
                        console.error("Error recording Read Now interaction:", result.error);
                        alert("An error occurred. Please try again.");
                    }
                },
                error: function () {
                    console.error("AJAX request failed.");
                    alert("An error occurred. Please try again.");
                }
            });
        }

        // Function to close the DFlip viewer and return to the book details
        function closeBook() {
            // Send AJAX request to record interaction (optional)
            // ...

            $("#dflip-viewer").css("opacity", "0");
            $("#df_manual_book").css("opacity", "0");
            setTimeout(() => {
                $("#dflip-viewer").hide();
                $(".content-wrapper").show();
            }, 500); // Wait for the transition to complete
        }

        // Function to handle the zoom in after user interaction
        function handleDFlipZoom() {
            $("#df_manual_book").css("transform", "scale(1)"); // Full zoom
        }

        // Attach an event listener for a mouse click or swipe gesture:
        $("#df_manual_book").on("click", handleDFlipZoom); // Add event listener for click
        // ... or add a swipe event listener if using a touch library

         // Function to open DFlip viewer when the "Read" button is clicked
        function addToFavorites(sourceUrl) {
     // Get the book ID from your Model
     var bookId = @Model.BookId;

     // Send AJAX request to record interaction
     $.ajax({
         url: '@Url.Action("AddtoFavorites", "Books")',
         type: 'POST',
         data: { bookId: bookId },
         success: function (result) {
             if (result.success) {

             } else {
                 // Handle error (e.g., display an error message)
                 console.error("Error recording Favorites interaction:", result.error);
                 alert("An error occurred. Please try again.");
             }
         },
         error: function () {
             console.error("AJAX request failed.");
             alert("An error occurred. Please try again.");
         }
     });
 }
    </script>



</body>
</html>